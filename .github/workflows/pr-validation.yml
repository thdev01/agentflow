name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    name: Validate Pull Request
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Validate PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
          revert

    - name: Check for merge conflicts
      run: |
        git fetch origin ${{ github.base_ref }}
        if git merge-base --is-ancestor origin/${{ github.base_ref }} HEAD; then
          echo "No merge conflicts detected"
        else
          echo "Checking for merge conflicts..."
          git merge --no-commit --no-ff origin/${{ github.base_ref }} || {
            echo "Merge conflicts detected!"
            git merge --abort
            exit 1
          }
          git merge --abort
        fi

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run tests with coverage
      run: pytest tests/ -v --cov=agentflow --cov-report=term --cov-report=xml

    - name: Check coverage threshold
      run: |
        COVERAGE=$(python -c "import xml.etree.ElementTree as ET; tree = ET.parse('coverage.xml'); print(tree.getroot().attrib['line-rate'])")
        COVERAGE_PCT=$(python -c "print(float($COVERAGE) * 100)")
        echo "Coverage: ${COVERAGE_PCT}%"

        if (( $(echo "$COVERAGE_PCT < 60" | bc -l) )); then
          echo "‚ùå Coverage is below 60%"
          exit 1
        fi

    - name: Comment coverage on PR
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const xml = fs.readFileSync('coverage.xml', 'utf8');
          const match = xml.match(/line-rate="([0-9.]+)"/);
          const coverage = match ? (parseFloat(match[1]) * 100).toFixed(2) : 0;

          const comment = `## Test Coverage Report

          **Coverage:** ${coverage}%

          ${coverage >= 60 ? '‚úÖ Coverage meets threshold (60%)' : '‚ö†Ô∏è Coverage is below threshold (60%)'}

          ü§ñ _Generated by AgentFlow CI_`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"

    - name: Run black check
      run: black --check agentflow/ tests/ examples/

    - name: Run ruff
      run: ruff check agentflow/ tests/ examples/

    - name: Run mypy
      run: mypy agentflow/ || echo "Type checking has warnings"
